name: 📱 Mobile Testing CI/CD (CodeceptJS Only)

# 🔥 Trigger conditions
on:
  push:
    branches: [ main, develop ]
    paths:
      - 'tests/**'
      - '.github/workflows/**'
      - 'codecept.conf.js'
      - 'package.json'
      
  pull_request:
    branches: [ main ]
    paths:
      - 'tests/**'
      - 'codecept.conf.js'
      - 'package.json'
      
  # Manual trigger với options
  workflow_dispatch:
    inputs:
      test_suite:
        description: 'Test suite to run'
        required: false
        default: 'all'
        type: choice
        options:
        - all
        - smoke
        - regression
      backend_url:
        description: 'Backend URL to test against'
        required: false
        default: 'https://your-backend-api.herokuapp.com'
        type: string

# 🌍 Environment variables
env:
  NODE_VERSION: '18'
  ANDROID_API_LEVEL: '29'
  BACKEND_URL: ${{ github.event.inputs.backend_url || 'https://your-backend-api.herokuapp.com' }}

# 🏗️ Jobs
jobs:
  # JOB 1: Code Quality Check cho Test Code
  test-code-quality:
    name: 🔍 Test Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: 📂 Checkout Repository
      uses: actions/checkout@v4
        
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📦 Install Dependencies
      run: |
        npm ci
        
    - name: 🔍 Run ESLint on Test Code
      run: |
        npx eslint tests/ --ext .js --format json --output-file eslint-report.json || true
        
    - name: 📊 Validate CodeceptJS Configuration
      run: |
        npx codeceptjs def --verbose
        echo "✅ CodeceptJS configuration is valid"
        
    - name: 📤 Upload Lint Report
      uses: actions/upload-artifact@v4
      with:
        name: test-code-quality-report
        path: eslint-report.json

  # JOB 2: Smoke Tests (Nhanh)
  smoke-tests:
    name: 🚀 Smoke Tests
    runs-on: ubuntu-latest
    needs: test-code-quality
    
    steps:
    - name: 📂 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: ☕ Setup Java for Appium
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 📱 Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: 📦 Install Dependencies
      run: npm ci
      
    - name: 🔍 Backend Health Check
      run: |
        echo "🩺 Checking backend health: ${{ env.BACKEND_URL }}"
        curl -f "${{ env.BACKEND_URL }}/actuator/health" || {
          echo "⚠️ Backend not available, will run with mock data"
          echo "BACKEND_AVAILABLE=false" >> $GITHUB_ENV
        }
        echo "BACKEND_AVAILABLE=true" >> $GITHUB_ENV
        
    - name: 🧪 Run Smoke Tests (Dry Run)
      run: |
        # Chạy dry-run trước để kiểm tra test syntax
        npx codeceptjs run --grep "@smoke" --dry-run --verbose
        
    - name: ✅ Smoke Tests Validation Complete
      run: echo "🎉 Smoke tests structure is valid!"

  # JOB 3: Full E2E Testing với Android Emulator
  e2e-testing:
    name: 🤖 Full E2E Testing
    runs-on: ubuntu-latest
    needs: smoke-tests
    
    strategy:
      matrix:
        api-level: [29, 31]
        test-suite: [smoke, regression]
      fail-fast: false
      max-parallel: 2
      
    steps:
    - name: 📂 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: ☕ Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 📱 Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: 📦 Install Dependencies
      run: npm ci
      
    - name: 🎬 Enable KVM Group Permissions
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm
        
    - name: 🤖 Run Tests on Android ${{ matrix.api-level }}
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: ${{ matrix.api-level }}
        target: google_apis
        arch: x86_64
        profile: Nexus 6
        ram-size: 4096M
        heap-size: 1024M
        emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: true
        script: |
          echo "🚀 Starting E2E Tests for ${{ matrix.test-suite }}..."
          
          # Kiểm tra backend availability
          if curl -f "${{ env.BACKEND_URL }}/actuator/health" > /dev/null 2>&1; then
            echo "✅ Backend is available at ${{ env.BACKEND_URL }}"
            export BACKEND_URL="${{ env.BACKEND_URL }}"
          else
            echo "⚠️ Backend not available, using local mock"
            # Có thể start mock server hoặc skip backend-dependent tests
          fi
          
          # Determine test pattern
          if [ "${{ matrix.test-suite }}" = "smoke" ]; then
            TEST_PATTERN="@smoke"
          elif [ "${{ matrix.test-suite }}" = "regression" ]; then
            TEST_PATTERN="@regression"
          else
            TEST_PATTERN=""
          fi
          
          # Run CodeceptJS tests
          if [ -n "$TEST_PATTERN" ]; then
            npx codeceptjs run --grep "$TEST_PATTERN" --steps --reporter mochawesome
          else
            npx codeceptjs run --steps --reporter mochawesome
          fi
          
    - name: 📊 Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: e2e-results-${{ matrix.test-suite }}-api${{ matrix.api-level }}
        path: |
          output/
          mochawesome-report/
          
    - name: 📸 Upload Screenshots on Failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: failure-screenshots-${{ matrix.test-suite }}-api${{ matrix.api-level }}
        path: output/*.png

  # JOB 4: Test Report Generation
  test-reports:
    name: 📊 Generate Test Reports
    runs-on: ubuntu-latest
    needs: e2e-testing
    if: always()
    
    steps:
    - name: 📂 Checkout Code
      uses: actions/checkout@v4
      
    - name: 📥 Download All Test Results
      uses: actions/download-artifact@v4
      with:
        path: all-test-results/
        
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: 📊 Generate Consolidated Report
      run: |
        npm install -g mochawesome-merge mochawesome-report-generator
        
        # Find all mochawesome JSON files
        find all-test-results/ -name "*.json" -path "*/mochawesome-report/*" | head -10
        
        # Merge reports
        mochawesome-merge "all-test-results/*/mochawesome-report/*.json" > consolidated-report.json
        
        # Generate HTML report
        marge consolidated-report.json --reportDir final-report --inline --reportTitle "Mobile Testing Results"
        
    - name: 📈 Upload Consolidated Report
      uses: actions/upload-artifact@v4
      with:
        name: consolidated-test-report
        path: final-report/
        
    - name: 📝 Create GitHub Summary
      run: |
        echo "# 📱 Mobile Testing Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Repository:** ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
        echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "**Triggered by:** ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
        echo "**Backend URL:** ${{ env.BACKEND_URL }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Job status summary
        echo "## 📊 Job Results" >> $GITHUB_STEP_SUMMARY
        echo "- 🔍 Test Code Quality: ${{ needs.test-code-quality.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- 🚀 Smoke Tests: ${{ needs.smoke-tests.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- 🤖 E2E Testing: ${{ needs.e2e-testing.result }}" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "final-report/mochawesome.html" ]; then
          echo "- 📊 Test Report: ✅ Generated successfully" >> $GITHUB_STEP_SUMMARY
        else
          echo "- 📊 Test Report: ❌ Generation failed" >> $GITHUB_STEP_SUMMARY
        fi